radar_slam:

  # Topics
  pointCloudTopic: "/pcl2_visualize_2"               # Point cloud data <!-- pc2_raw inlier_pc2 segmented -->
  imuTopic: "/imu/data"                         # IMU data
  odomTopic: "/odom"                   # IMU pre-preintegration odometry, same frequency as IMU
  gpsTopic: "/ublox/fix"                   # GPS odometry topic from navsat, see module_navsat.launch file

  # Frames
  lidarFrame: ""
  baselinkFrame: "base_link"
  odometryFrame: "odom"
  mapFrame: "map"

  # GPS Settings
  # useGpsElevation: false                      # if GPS elevation is bad, set to "false"
  # gpsCovThreshold: 2.0                        # m^2, threshold for using GPS data
  # poseCovThreshold: 25.0                      # m^2, threshold for using GPS data
  
  # Export settings
  # savePCD: false                              # 
  # savePCDDirectory: "/Downloads/4DRadarSLAM/"        #

  # Sensor Settings
  # downsampleRate: 1                           # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1 
  # lidarMinRange: 1.0                          # default: 1.0, minimum lidar range to be used
  # lidarMaxRange: 1000.0                       # default: 1000.0, maximum lidar range to be used

  # IMU Settings
  imuAccNoise: 1.6045297862472285e-02 # 3.9939570888238808e-03
  imuGyrNoise: 4.6323051393777089e-04 # 1.5636343949698187e-03
  imuAccBiasN: 1.0130240017525267e-03 # 6.4356659353532566e-05
  imuGyrBiasN: 2.6802634981395178e-05 # 3.5640318696367613e-05
  imuGravity: 9.80511
  imuRPYWeight: 0.01

  # Extrinsics (Lidar -> IMU)
  # extrinsicTrans: [0, 0, 0]
  extrinsicTrans: [-0.1538365971333406, -0.08238477330801543, 0.01148820268866392]
  # extrinsicRot: [1, 0, 0,
  #                 0, -1, 0,
  #                 0, 0, -1]
  # extrinsicRPY: [1, 0, 0,
  #                 0, -1, 0,
  #                 0, 0, -1]
  extrinsicRot: [-1.0, 0.0, 0.0,
                 0.0, -1.0, 0.0,
                 -0.0, -0.0, -1.0]
  extrinsicRPY: [-1.0, 0.0, 0.0,
                 0.0, -1.0, 0.0,
                 -0.0, -0.0, -1.0]
  # extrinsicRot: [1, 0, 0,
  #                 0, 1, 0,
  #                 0, 0, 1]
  # extrinsicRPY: [1, 0, 0,
  #                 0, 1, 0,
  #                 0, 0, 1]


